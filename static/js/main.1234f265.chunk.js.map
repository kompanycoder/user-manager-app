{"version":3,"sources":["serviceWorker.js","config/config.js","actions/actions.js","app-ui/user_ui.js","components/userList.js","app-ui/user_search_ui.js","components/searchUser.js","components/EditUser.js","HOC/header.js","HOC/footer.js","App.js","routes.js","reducers/index.js","reducers/userReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","config","baseUrl","getUsers","type","payload","fetch","then","response","json","result","catch","err","console","log","UserUi","props","className","to","id","name","email","occupation","bio","UserList","showUsers","users","map","item","i","key","state","count","this","dispatch","concat","length","usersFound","userCount","Component","connect","UserFound","SearchUser","renderUsers","renderList","user","searchTerm","searching","filtered","nextProps","newusers","setState","e","preventDefault","searchName","target","value","toLowerCase","results","filter","includes","onSubmit","findUser","placeholder","onChange","defaultValue","EditUser","handleInputChange","newformdata","handleSubmit","userUpdate","userId","restOfOptions","headers","method","body","JSON","stringify","data","editUser","history","push","getSingleUser","params","updateDetails","htmlFor","required","autoFocus","rows","onClick","Header","Footer","Date","getFullYear","toString","getYear","App","children","Routes","path","exact","component","rootReducer","combineReducers","action","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1234f265.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const config = {\n        baseUrl: 'https://ti-react-test.herokuapp.com/users'\n};\n\nexport default config;","import config from '../config/config';\n\nconst GET_USERS = 'GET_USERS';\n\n// get user\nexport function getUsers() {\n    // console.log(config);\n    let data = fetch(config.baseUrl).then((response)=>{\n        return response.json();\n    }).then((result)=>{\n        // console.log(result);\n        return result;\n    }).catch((err)=>{\n        console.log(\"Found Error..: \\n\" + err);\n    });\n    // console.log(data);\n    return {\n        type: GET_USERS,\n        payload: data\n    }\n};\n\n// before editing, get single user first into the edit component then edit \nexport function getSingleUser(id){\n    let userId = `/${id}`;\n    let options = {\n        method: 'GET'\n    };\n\n    let data = fetch(config.baseUrl+ userId,options).then((response)=>{\n        return response.json();\n    }).then((data)=>{\n        // console.log(data);\n        return data;\n    }).catch((err)=>{\n        console.log(err);\n    });\n    // console.log(data);\n    return {\n        type : 'GET_SINGLE_USER',\n        payload: data\n    }\n\n}\n// edit user\nexport function editUser(id,user){\n    // note this works. after adding body plus json integrity for object\n    let userId = `/${id}`;\n    // console.log(user, userId);\n    let restOfOptions = {\n        headers: {\n            // 'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        method: 'PATCH',\n        // cors mode not supported. tested this...\n        // mode: 'CORS'\n        body: JSON.stringify(user)\n    };\n    // let body = JSON.stringify(user);\n    // console.log(body);\n\n    let data = fetch(config.baseUrl+userId,restOfOptions).then((response)=>{ \n        return response.json()\n    }).then((data)=>{\n        return data\n    }).catch((err)=>{\n        console.log(err);\n    });\n    return {\n        type: 'EDIT_USER',\n        payload: data\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst UserUi = (props) => {\n    // console.log(props);\n    return (\n        <div className=\"container\">\n            <div className=\"card mt-2 col-12\">\n                    <div className=\"col-4 card-btn\">\n                        <Link to={`/users/${props.id}`} className=\"btn btn-block btn-outline-primary\">Edit</Link>\n                    </div>\n                <div className=\"row\">\n                    <div className=\" col-11 text-left pt-1\">\n                        <h6 className=\"text\">Name: {props.name}</h6>\n                        <p className=\"text\">Email: {props.email}</p>\n                        <p className=\"text\">Occupation: {props.occupation}</p>\n                        \n                    </div>\n                    <div className=\"col-12 text-justify\">\n                        <h6 className=\"primary text-success\">Bio :</h6>\n                            <p className=\"pl-1 text-info text-capitalize\">{props.bio}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default UserUi;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers } from \"../actions/actions\";\n// import { Link } from \"react-router-dom\";\nimport UserUi from \"../app-ui/user_ui\";\nimport { Link } from \"react-router-dom\";\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n  componentDidMount() {\n    // call dispatch to get props with data here\n    this.props.dispatch(getUsers());\n  }\n  showUsers = users =>\n    // console.log(users)\n\n    users\n      ? users.map((item, i) => (\n          <UserUi key={i} {...item} />\n          // console.log(item)\n        ))\n      : \"No users loaded...\";\n  \n  // usercount functionality\n  userCount(users) {\n    // console.log(users);\n    let arrCount;\n    if (users) {\n      // console.log(users);\n      let newArray = [].concat(users);\n      let newCount = newArray.length;\n      // console.log(newCount);\n      arrCount = newCount;\n      return arrCount;\n    }\n    return '0';\n  }\n\n  render(props) {\n    // console.log(this.props);\n    let usersFound = this.props.users.users;\n\n    return (\n      <div className=\"container-fluid\">\n        <h4 className=\"mt-4 mb-4 text-center\">\n          Users Dashboard Display\n        </h4>\n        <div className=\"row\">\n        <p className=\"text-center pr-2\">User count is at : {this.userCount(usersFound)} </p> <Link to=\"/search\" className=\"btn btn-outline-info ml-3 right-most-btn\">Search Users</Link>\n        </div>\n        \n        {/* link to add user component. but the backend does not support adding of new user. Tested this.. */}\n        {/* <Link className=\"btn btn-outline-info ml-4\" to=\"/add\">Add User</Link> */}\n        {/* not implemented but an actual possibility when items are alot... */}\n        \n        <div className=\"container-fluid text-center\">\n          {this.showUsers(usersFound)}\n        </div>\n    \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\nexport default connect(mapStateToProps)(UserList);\n","import React from 'react';\n\nexport default function UserFound(props) {\n    // console.log(props);\n    return (\n        <div className=\"container-fluid p-3\">\n            <div className=\"card p-3\">\n                <div className=\"row\">\n                        <div className=\" col-11 text-left pt-1\">\n                            <h6 className=\"text\">Name: {props.name}</h6>\n                            <p className=\"text\">Email: {props.email}</p>\n                            <p className=\"text\">Occupation: {props.occupation}</p>\n                            \n                        </div>\n                        <div className=\"col-12 text-justify\">\n                            <h6 className=\"primary text-success\">Bio :</h6>\n                                <p className=\"pl-1 text-info text-capitalize\">{props.bio}</p>\n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers } from \"../actions/actions\";\nimport UserSearchUi from '../app-ui/user_search_ui';\nimport { Link } from \"react-router-dom\";\n\nclass SearchUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          searchTerm: '',\n          searching: false,\n          users: [],\n          filtered: []\n        };\n      }\n  componentDidMount() {\n    // call dispatch to get props with data here\n    this.props.dispatch(getUsers());\n    // let usersFound = this.props.users.users;\n    // this.setState({\n    //     users: usersFound\n    // })\n  }\n  componentWillReceiveProps(nextProps){\n    let newusers = nextProps.users.users;\n    // console.log(newusers);\n    this.setState({\n      users: newusers \n    });\n    // console.log(this.state.users);\n  }\n  // user search fuctionality\n  searchTerm(e){\n    e.preventDefault();\n    this.setState({ searching: true });\n    let searchName = e.target.value;\n    // console.log(searchName);\n    \n    this.setState({\n      searchTerm: searchName\n    });\n  }\n\n  findUser(e) {\n    e.preventDefault();\n    let searchName = this.state.searchTerm.toLowerCase();\n    let userList = this.state.users;\n    // console.log(userList);\n    // console.log(searchName);\n    //  filter functinality \n\n    // eslint-disable-next-line array-callback-return\n    let results = userList.filter((user) => {\n      // console.log(user);\n      // username to lowercase before omparing with searchterm\n      let userName = user.name.toLowerCase();\n      // console.log(userName);\n      let match;\n      // console.log(newArr);\n      if(userName.includes(searchName)){\n          // console.log(user);\n           match= user;\n          // console.log(match);\n          return match;\n      }\n      // return match; done in clause logic above.\n    });\n    \n    // console.log(results);\n    this.setState({\n      filtered: results\n    })\n\n    \n  };\n  renderUsers =(renderList)=> (\n    // console.log(this.state.filtered);\n    renderList ?\n      renderList.map((user, i)=>(\n      <UserSearchUi key={i} {...user} />\n    )) : \"No items to Render\"\n    \n  )\n\n  render() {\n    // console.log(this.state.users);\n    // let usersFound = this.props.users.users;\n    return (\n      <div className=\"container\">\n       <div className=\"row\">\n       <h6 className=\"text-center\">Who are you trying to find?</h6> <Link className=\"btn btn-outline-info right-most-btn\" to=\"/\">\n          Back\n        </Link>\n       </div>\n        \n        <div className=\"col-md-12 mt-4\">\n            <form\n            className=\"form-inline\"\n            onSubmit={(e) =>this.findUser(e)}\n            >\n            <input\n                name=\"search\"\n                className=\"form-control col-md-7\"\n                placeholder=\"Search user by name\"\n                onChange={e => this.searchTerm(e)}\n                type=\"text\"\n                defaultValue={this.state.searchTerm}\n            />{\" \"}\n            <button className=\"btn btn-light\" type=\"submit\">\n                Search\n            </button>\n            </form>\n            <div className=\"col-md-10 mt-4 text-center\">\n                {this.state.searching ? this.renderUsers(this.state.filtered): \"Search for user..\"}\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\nexport default connect(mapStateToProps)(SearchUser);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { getUsers } from '../actions/actions';\nimport { Link } from \"react-router-dom\";\nimport { getSingleUser, editUser } from \"../actions/actions\";\nclass EditUser extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      user:{\n        id:'',\n        name: '',\n        email:'',\n        occupation:'',\n        bio:''\n      }\n    };\n  }\n  componentDidMount(){\n    // call dispatch with single user id here\n   this.props.dispatch(getSingleUser(this.props.match.params.id)); \n  }\n  componentWillReceiveProps(nextProps){\n    let updateDetails = nextProps.users.user;\n    // console.log(updateDetails);\n    this.setState({\n      user: {\n        id:updateDetails.id,\n        name: updateDetails.name,\n        email:updateDetails.email,\n        occupation: updateDetails.occupation,\n        bio: updateDetails.bio\n      }\n    })\n  }\n  handleInputChange =(e, name) => {\n    e.preventDefault();\n    const newformdata = {\n      ...this.state.user\n    }\n    newformdata[name] = e.target.value\n\n    this.setState({\n      user : newformdata \n    })\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let  userUpdate = this.state.user;\n    let userId = this.state.user.id;\n\n    // console.log(userUpdate);\n    this.props.dispatch(editUser(userId, userUpdate));\n    // remember to reroute user back to home page\n    this.props.history.push(`/`); \n\n  };\n  render() {\n    // console.log(this.props);\n    return (\n      <div className=\"row\">\n        <Link className=\"btn btn-outline-info right-most-btn\" to=\"/\">\n          Back\n        </Link>\n        <div className=\"container\">\n        <h4 className=\"text-left\">Edit User</h4>\n        \n        <div className=\"col-md-10\">\n          <div className=\"form-label-group\">\n              <label htmlFor=\"inputName\">Name</label>\n              <input type=\"email\" name=\"email\" id=\"inputName\" className=\"form-control\" placeholder=\"Full name\" required=\"\" autoFocus=\"\" onChange={(e)=>this.handleInputChange(e, 'name')} value={this.state.user.name} />\n\n            </div>\n            <div className=\"form-label-group\">\n              <label htmlFor=\"inputEmail\">Email address</label>\n              <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" required=\"\" autoFocus=\"\" name=\"email\" onChange={(e)=>this.handleInputChange(e, 'email')} value={this.state.user.email} />\n              \n            </div>\n            <div className=\"form-label-group\">\n              <label htmlFor=\"inputOccupation\">Occupation</label>\n              <input type=\"email\" id=\"inputOccupation\" className=\"form-control\" placeholder=\"Occupation\" required=\"\" autoFocus=\"\" name=\"occupation\" onChange={(e)=>this.handleInputChange(e, 'occupation')} value={this.state.user.occupation} />\n              \n            </div>\n            <div className=\"form-label-group\">\n              <label htmlFor=\"inputBio\">Bio</label>\n              <textarea type=\"email\" id=\"inputBio\" className=\"form-control\" rows=\"8\" placeholder=\"Your Bio\" required=\"\" autoFocus=\"\" name=\"bio\" onChange={(e)=>this.handleInputChange(e, 'bio')} value={this.state.user.bio} ></textarea>\n              \n            </div>\n            <button className=\"btn btn-block btn-outline-success mt-4\" onClick={(e)=>this.handleSubmit(e)}>Edit</button>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n}\nexport default connect(mapStateToProps)(EditUser);\n","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"constainer-fluid\">\n                <h1 className=\"text-center mt-4 mb-4\">User management App</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    getYear(){\n        let currentYear = new Date().getFullYear().toString();\n        return currentYear;\n    }\n    render() {\n        return (\n            <div className=\"container footer\">\n               <p className=\"text-center\">&copy; copyright {this.getYear()}.</p>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Header from \"./HOC/header\";\nimport Footer from \"./HOC/footer\";\n// import Routes from './routes';\nimport \"./App.css\";\n\nconst App = (props) => (\n  // console.log(props.children);\n    <div>\n      <Header />\n      <div className=\"col-md-12\">{props.children}</div>\n      <Footer />\n    </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport UserList from \"./components/userList\";\nimport SearchUser from './components/searchUser';\nimport EditUser from './components/EditUser';\nimport AppLayout from './App';\n\nconst Routes = () => {\n  return (\n    <AppLayout>\n      <Switch>\n        <Route path=\"/\" exact component={UserList} />\n        <Route path=\"/users/:id\" exact component={EditUser} />\n        <Route path=\"/search\" exact component={SearchUser} />\n      </Switch>\n    </AppLayout>\n  );\n};\n\nexport default Routes;","import { combineReducers } from 'redux';\nimport users from './userReducer';\n\nconst rootReducer = combineReducers({\n    users\n});\n\nexport default rootReducer; ","export default function (state={}, action) {\n    switch(action.type){\n        case 'GET_USERS':\n            return {...state, users:action.payload};\n        case 'GET_SINGLE_USER':\n            return {...state, user: action.payload};    \n        case 'EDIT_USER':\n            return {...state, user:action.payload}\n        default:\n        return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport Routes from './routes';\nimport {Provider} from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware} from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\n\nReactDOM.render(\n<Provider store={createStoreWithMiddleware(reducers)}>\n    <BrowserRouter>\n        <Routes />\n    </BrowserRouter>\n</Provider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}